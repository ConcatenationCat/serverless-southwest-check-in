# Functions

 1. Add reservation

  - Receives first, last, and confirmation number
  - Looks up reservation from Southwest API
  - Adds reservation to DynamoDB

 2. Scheduled task to lookup check-ins (every 5 min)

  - Query DynamoDB for upcoming reservations
  - Call check-in function via SQS/SNS

 3. Check in
  - Check in to flights via Southwest API

# DynamoDB

We're storing the reservations in DynamoDB, but Dynamo is a little weird for storing data which is queried by timestamp. Since most access is done via primary key, it is costly to do table scans for data, so searching for ranges of times (i.e. all reservations before 12:00) is difficult. In addition, the primary key cannot be duplicated, but we can have more than one reservation at a specific time. As a result, I chose the following format for storing the reservations:

 - Check-in time (Hash key)
   - Rounded to the nearest minute
 - Reservation ID (Range key)

This is pretty much backwards to how it should be... we should be using the check in as a range and the ID as a hash, but DynamoDB makes it a little weird. As a result, when querying for reservations to check-in, we will query for multiple check-in times in the scheduled task. The reservation ID as a range key only serves to ensure that each entry is unique, as there cannot be two entries with the same check-in time.
